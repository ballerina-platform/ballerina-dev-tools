{
  "start": {
    "line": 153,
    "offset": 0
  },
  "end": {
    "line": 169,
    "offset": 1
  },
  "source": "wait.bal",
  "description": "Tests a simple diagram flow",
  "diagram": {
    "fileName": "wait.bal",
    "nodes": [
      {
        "id": "185970",
        "metadata": {
          "label": "Start",
          "data": {
            "parameters": [
              "boolean condition"
            ],
            "return": "error?"
          }
        },
        "codedata": {
          "node": "EVENT_START",
          "lineRange": {
            "fileName": "wait.bal",
            "startLine": {
              "line": 153,
              "offset": 63
            },
            "endLine": {
              "line": 169,
              "offset": 1
            }
          },
          "sourceCode": "// Dynamic wait patterns\nfunction dynamicWaitPatterns(boolean condition) returns error? {\n    worker W1 returns string|error {\n        return mockFetch(\"http://1.com\", 1);\n    }\n\n    worker W2 returns string|error {\n        return mockFetch(\"http://2.com\", 2);\n    }\n\n    string value;\n    if condition {\n        value = check wait W1;\n    } else {\n        value = check wait W2;\n    }\n    io:println(\"Value: \" + value);\n}"
        },
        "returning": false,
        "flags": 0
      },
      {
        "id": "184827",
        "metadata": {
          "label": "Parallel Flow",
          "description": "Create parallel flows"
        },
        "codedata": {
          "node": "PARALLEL_FLOW",
          "lineRange": {
            "fileName": "wait.bal",
            "startLine": {
              "line": 154,
              "offset": 4
            },
            "endLine": {
              "line": 160,
              "offset": 5
            }
          }
        },
        "returning": false,
        "branches": [
          {
            "label": "W1",
            "kind": "WORKER",
            "codedata": {
              "node": "WORKER",
              "lineRange": {
                "fileName": "wait.bal",
                "startLine": {
                  "line": 154,
                  "offset": 4
                },
                "endLine": {
                  "line": 156,
                  "offset": 5
                }
              },
              "sourceCode": "worker W1 returns string|error {\n        return mockFetch(\"http://1.com\", 1);\n    }"
            },
            "repeatable": "ONE_OR_MORE",
            "properties": {
              "variable": {
                "metadata": {
                  "label": "Worker Name",
                  "description": "Name of the worker"
                },
                "valueType": "IDENTIFIER",
                "value": "W1",
                "optional": false,
                "editable": false,
                "advanced": false,
                "hidden": false,
                "codedata": {
                  "lineRange": {
                    "fileName": "wait.bal",
                    "startLine": {
                      "line": 154,
                      "offset": 11
                    },
                    "endLine": {
                      "line": 154,
                      "offset": 13
                    }
                  }
                }
              },
              "type": {
                "metadata": {
                  "label": "Return Type",
                  "description": "Type of the return value"
                },
                "valueType": "TYPE",
                "value": "string|error",
                "optional": true,
                "editable": true,
                "advanced": false,
                "hidden": false
              }
            },
            "children": [
              {
                "id": "185796",
                "metadata": {
                  "label": "Return",
                  "description": "Value of 'mockFetch(\"http://1.com\", 1)'"
                },
                "codedata": {
                  "node": "RETURN",
                  "lineRange": {
                    "fileName": "wait.bal",
                    "startLine": {
                      "line": 155,
                      "offset": 8
                    },
                    "endLine": {
                      "line": 155,
                      "offset": 44
                    }
                  },
                  "sourceCode": "return mockFetch(\"http://1.com\", 1);"
                },
                "returning": true,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Return value"
                    },
                    "valueType": "ACTION_OR_EXPRESSION",
                    "value": "mockFetch(\"http://1.com\", 1)",
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "hidden": false
                  }
                },
                "flags": 0
              }
            ]
          },
          {
            "label": "W2",
            "kind": "WORKER",
            "codedata": {
              "node": "WORKER",
              "lineRange": {
                "fileName": "wait.bal",
                "startLine": {
                  "line": 158,
                  "offset": 4
                },
                "endLine": {
                  "line": 160,
                  "offset": 5
                }
              },
              "sourceCode": "worker W2 returns string|error {\n        return mockFetch(\"http://2.com\", 2);\n    }"
            },
            "repeatable": "ONE_OR_MORE",
            "properties": {
              "variable": {
                "metadata": {
                  "label": "Worker Name",
                  "description": "Name of the worker"
                },
                "valueType": "IDENTIFIER",
                "value": "W2",
                "optional": false,
                "editable": false,
                "advanced": false,
                "hidden": false,
                "codedata": {
                  "lineRange": {
                    "fileName": "wait.bal",
                    "startLine": {
                      "line": 158,
                      "offset": 11
                    },
                    "endLine": {
                      "line": 158,
                      "offset": 13
                    }
                  }
                }
              },
              "type": {
                "metadata": {
                  "label": "Return Type",
                  "description": "Type of the return value"
                },
                "valueType": "TYPE",
                "value": "string|error",
                "optional": true,
                "editable": true,
                "advanced": false,
                "hidden": false
              }
            },
            "children": [
              {
                "id": "189764",
                "metadata": {
                  "label": "Return",
                  "description": "Value of 'mockFetch(\"http://2.com\", 2)'"
                },
                "codedata": {
                  "node": "RETURN",
                  "lineRange": {
                    "fileName": "wait.bal",
                    "startLine": {
                      "line": 159,
                      "offset": 8
                    },
                    "endLine": {
                      "line": 159,
                      "offset": 44
                    }
                  },
                  "sourceCode": "return mockFetch(\"http://2.com\", 2);"
                },
                "returning": true,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Return value"
                    },
                    "valueType": "ACTION_OR_EXPRESSION",
                    "value": "mockFetch(\"http://2.com\", 2)",
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "hidden": false
                  }
                },
                "flags": 0
              }
            ]
          }
        ],
        "flags": 0
      },
      {
        "id": "192589",
        "metadata": {
          "label": "Declare Variable",
          "description": "Assign a value to a variable"
        },
        "codedata": {
          "node": "VARIABLE",
          "lineRange": {
            "fileName": "wait.bal",
            "startLine": {
              "line": 162,
              "offset": 4
            },
            "endLine": {
              "line": 162,
              "offset": 17
            }
          },
          "sourceCode": "string value;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Initialize with value"
            },
            "valueType": "ACTION_OR_EXPRESSION",
            "value": "",
            "optional": true,
            "editable": true,
            "advanced": false,
            "hidden": false
          },
          "variable": {
            "metadata": {
              "label": "Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "value",
            "optional": false,
            "editable": false,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "lineRange": {
                "fileName": "wait.bal",
                "startLine": {
                  "line": 162,
                  "offset": 11
                },
                "endLine": {
                  "line": 162,
                  "offset": 16
                }
              }
            }
          },
          "type": {
            "metadata": {
              "label": "Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "string",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false,
            "hidden": false,
            "codedata": {}
          }
        },
        "flags": 0
      },
      {
        "id": "193693",
        "metadata": {
          "label": "If",
          "description": "Add conditional branch to the integration flow."
        },
        "codedata": {
          "node": "IF",
          "lineRange": {
            "fileName": "wait.bal",
            "startLine": {
              "line": 163,
              "offset": 4
            },
            "endLine": {
              "line": 167,
              "offset": 5
            }
          },
          "sourceCode": "if condition {\n        value = check wait W1;\n    } else {\n        value = check wait W2;\n    }"
        },
        "returning": false,
        "branches": [
          {
            "label": "Then",
            "kind": "BLOCK",
            "codedata": {
              "node": "CONDITIONAL",
              "lineRange": {
                "fileName": "wait.bal",
                "startLine": {
                  "line": 163,
                  "offset": 17
                },
                "endLine": {
                  "line": 165,
                  "offset": 5
                }
              },
              "sourceCode": "{\n        value = check wait W1;\n    }"
            },
            "repeatable": "ONE_OR_MORE",
            "properties": {
              "condition": {
                "metadata": {
                  "label": "Condition",
                  "description": "Boolean Condition"
                },
                "valueType": "EXPRESSION",
                "value": "condition ",
                "placeholder": "true",
                "optional": false,
                "editable": true,
                "advanced": false,
                "hidden": false
              }
            },
            "children": [
              {
                "id": "194710",
                "metadata": {
                  "label": "Wait",
                  "description": "Wait for a set of futures to complete"
                },
                "codedata": {
                  "node": "WAIT",
                  "lineRange": {
                    "fileName": "wait.bal",
                    "startLine": {
                      "line": 164,
                      "offset": 8
                    },
                    "endLine": {
                      "line": 164,
                      "offset": 30
                    }
                  },
                  "sourceCode": "value = check wait W1;"
                },
                "returning": false,
                "properties": {
                  "waitAll": {
                    "metadata": {
                      "label": "Wait All",
                      "description": "Wait for all tasks to complete"
                    },
                    "valueType": "FLAG",
                    "value": false,
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "hidden": false
                  },
                  "futures": {
                    "metadata": {
                      "label": "Futures",
                      "description": "The futures to wait for"
                    },
                    "valueType": "REPEATABLE_PROPERTY",
                    "value": {
                      "future1": {
                        "metadata": {
                          "label": "Future",
                          "description": "The worker/async function to wait for"
                        },
                        "valueType": "FIXED_PROPERTY",
                        "value": {
                          "variable": {
                            "metadata": {
                              "label": "Variable Name",
                              "description": "Name of the variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "hidden": false,
                            "codedata": {
                              "dependentProperty": "waitAll"
                            }
                          },
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Expression"
                            },
                            "valueType": "EXPRESSION",
                            "value": "W1",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "hidden": false
                          }
                        },
                        "optional": false,
                        "editable": false,
                        "advanced": false,
                        "hidden": false
                      }
                    },
                    "optional": false,
                    "editable": false,
                    "advanced": false,
                    "hidden": false
                  }
                },
                "flags": 1
              }
            ]
          },
          {
            "label": "Else",
            "kind": "BLOCK",
            "codedata": {
              "node": "ELSE",
              "lineRange": {
                "fileName": "wait.bal",
                "startLine": {
                  "line": 165,
                  "offset": 11
                },
                "endLine": {
                  "line": 167,
                  "offset": 5
                }
              },
              "sourceCode": "{\n        value = check wait W2;\n    }"
            },
            "repeatable": "ZERO_OR_ONE",
            "children": [
              {
                "id": "196694",
                "metadata": {
                  "label": "Wait",
                  "description": "Wait for a set of futures to complete"
                },
                "codedata": {
                  "node": "WAIT",
                  "lineRange": {
                    "fileName": "wait.bal",
                    "startLine": {
                      "line": 166,
                      "offset": 8
                    },
                    "endLine": {
                      "line": 166,
                      "offset": 30
                    }
                  },
                  "sourceCode": "value = check wait W2;"
                },
                "returning": false,
                "properties": {
                  "waitAll": {
                    "metadata": {
                      "label": "Wait All",
                      "description": "Wait for all tasks to complete"
                    },
                    "valueType": "FLAG",
                    "value": false,
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "hidden": false
                  },
                  "futures": {
                    "metadata": {
                      "label": "Futures",
                      "description": "The futures to wait for"
                    },
                    "valueType": "REPEATABLE_PROPERTY",
                    "value": {
                      "future1": {
                        "metadata": {
                          "label": "Future",
                          "description": "The worker/async function to wait for"
                        },
                        "valueType": "FIXED_PROPERTY",
                        "value": {
                          "variable": {
                            "metadata": {
                              "label": "Variable Name",
                              "description": "Name of the variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "hidden": false,
                            "codedata": {
                              "dependentProperty": "waitAll"
                            }
                          },
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Expression"
                            },
                            "valueType": "EXPRESSION",
                            "value": "W2",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "hidden": false
                          }
                        },
                        "optional": false,
                        "editable": false,
                        "advanced": false,
                        "hidden": false
                      }
                    },
                    "optional": false,
                    "editable": false,
                    "advanced": false,
                    "hidden": false
                  }
                },
                "flags": 1
              }
            ]
          }
        ],
        "flags": 0
      },
      {
        "id": "198558",
        "metadata": {
          "label": "println",
          "description": "Prints `any`, `error` or string templates(such as `The respective int value is ${val}`) value(s) to the STDOUT\nfollowed by a new line.\n```ballerina\nio:println(\"Start processing the CSV file from \", srcFileName);\n```\n",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_io_1.8.0.png"
        },
        "codedata": {
          "node": "FUNCTION_CALL",
          "org": "ballerina",
          "module": "io",
          "symbol": "println",
          "version": "1.8.0",
          "lineRange": {
            "fileName": "wait.bal",
            "startLine": {
              "line": 168,
              "offset": 4
            },
            "endLine": {
              "line": 168,
              "offset": 34
            }
          },
          "sourceCode": "io:println(\"Value: \" + value);"
        },
        "returning": false,
        "properties": {
          "values": {
            "metadata": {
              "label": "values",
              "description": "The value(s) to be printed"
            },
            "valueType": "EXPRESSION_SET",
            "valueTypeConstraint": "io:Printable",
            "value": [
              "\"Value: \" + value"
            ],
            "placeholder": "()",
            "optional": false,
            "editable": true,
            "advanced": false,
            "hidden": false,
            "codedata": {
              "kind": "REST_PARAMETER",
              "originalName": "values"
            },
            "typeMembers": [
              {
                "type": "Printable",
                "packageInfo": "ballerina:io:1.8.0",
                "kind": "ARRAY_TYPE",
                "selected": false
              }
            ]
          }
        },
        "flags": 0
      }
    ],
    "connections": []
  }
}
