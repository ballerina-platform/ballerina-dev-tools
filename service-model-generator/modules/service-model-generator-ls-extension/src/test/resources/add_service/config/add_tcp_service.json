{
  "filePath": "sample1/main.bal",
  "description": "Test adding a tcp service",
  "service": {
    "id": "3",
    "name": "TCP Service",
    "type": "tcp",
    "displayName": "TCP Service",
    "description": "Add the service documentation",
    "displayAnnotation": {
      "label": "TCP Service",
      "iconPath": "https://bcentral-packageicons.azureedge.net/images/ballerina_tcp_1.13.0.png"
    },
    "moduleName": "tcp",
    "orgName": "ballerina",
    "version": "1.13.0",
    "packageName": "tcp",
    "listenerProtocol": "tcp",
    "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_tcp_1.13.0.png",
    "properties": {
      "listener": {
        "metadata": {
          "label": "Listeners",
          "description": "The Listeners to be bound with the service"
        },
        "enabled": true,
        "editable": true,
        "value": "tcpListener",
        "values": [],
        "valueType": "MULTIPLE_SELECT",
        "valueTypeConstraint": "tcp:Listener",
        "isType": false,
        "placeholder": "",
        "optional": false,
        "advanced": false,
        "items": [
          "tcpListener"
        ],
        "codedata": {
          "inListenerInit": false,
          "isBasePath": false,
          "inDisplayAnnotation": false,
          "type": "LISTENER"
        },
        "addNewButton": true,
        "imports": {}
      },
      "serviceType": {
        "metadata": {
          "label": "TCP Service Type",
          "description": ""
        },
        "enabled": false,
        "editable": true,
        "value": "Service",
        "valueType": "SINGLE_SELECT",
        "valueTypeConstraint": "string",
        "isType": false,
        "placeholder": "Service",
        "optional": false,
        "advanced": false,
        "items": [
          "",
          "Service"
        ],
        "codedata": {
          "inListenerInit": false,
          "isBasePath": false,
          "inDisplayAnnotation": false,
          "type": "SERVICE_TYPE"
        },
        "addNewButton": false
      }
    },
    "functions": []
  },
  "output": {
    "sample1/main.bal": [
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "\nimport ballerina/tcp;\n"
      },
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "\nservice on tcpListener {\n    remote function onConnect(tcp:Caller caller) returns tcp:ConnectionService|tcp:Error? {\n        do {\n            TcpEchoService connectionService = new TcpEchoService();\n            return connectionService;\n        } on fail error err {\n            // handle error\n            return error(\"unhandled error\", err);\n        }\n    }\n}"
      },
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "\nservice class TcpEchoService {\n    *tcp:ConnectionService;\n\n    remote function onBytes(tcp:Caller caller, readonly & byte[] data) returns tcp:Error? {\n        do {\n\n        } on fail error err {\n            // handle error\n            return error(\"unhandled error\", err);\n        }\n    }\n\n    remote function onError(tcp:Error tcpError) returns tcp:Error? {\n        do {\n\n        } on fail error err {\n            // handle error\n            return error(\"unhandled error\", err);\n        }\n    }\n\n    remote function onClose() returns tcp:Error? {\n        do {\n\n        } on fail error err {\n            // handle error\n            return error(\"unhandled error\", err);\n        }\n    }\n}\n\n"
      }
    ]
  }
}
