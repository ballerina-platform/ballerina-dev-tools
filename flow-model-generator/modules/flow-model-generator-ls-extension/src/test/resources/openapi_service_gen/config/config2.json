{
  "contractFile": "petstore_original.yaml",
  "textEdits": {
    "config2/main.bal": [
      {
        "range": {
          "start": {
            "line": 1,
            "character": 0
          },
          "end": {
            "line": 1,
            "character": 0
          }
        },
        "newText": "service Foo on l1, l2 {\n\n\tresource function put pet (Pet|xml|map<string> payload) returns Pet|xml|http:BadRequest|http:NotFound|StringMethodNotAllowed {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function post pet (Pet|xml|map<string> payload) returns PetXmlOk|http:MethodNotAllowed {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:METHOD_NOT_ALLOWED;\n\t\t}\n\t}\n\n\tresource function get pet/findByStatus (\"available\"|\"pending\"|\"sold\" status) returns Pet[]|xml|http:BadRequest {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function get pet/findByTags (string[]? tags) returns Pet[]|xml|http:BadRequest {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function get pet/[int petId] () returns Pet|xml|http:BadRequest|http:NotFound {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function post pet/[int petId] (string? name, string? status) returns http:MethodNotAllowed {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:METHOD_NOT_ALLOWED;\n\t\t}\n\t}\n\n\tresource function delete pet/[int petId] (string? api_key) returns http:BadRequest {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function post pet/[int petId]/uploadImage (string? additionalMetadata, byte[] payload) returns ApiResponseOk {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {body: {}};\n\t\t}\n\t}\n\n\tresource function get store/inventory () returns StoreInventoryResponse {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tresource function post store/'order (Order|xml|map<string> payload) returns OrderOk|http:MethodNotAllowed {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:METHOD_NOT_ALLOWED;\n\t\t}\n\t}\n\n\tresource function get store/'order/[int orderId] () returns Order|xml|http:BadRequest|http:NotFound {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function delete store/'order/[int orderId] () returns http:BadRequest|http:NotFound {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function post user (User|xml|map<string> payload) returns UserXmlDefault {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {body: {}, status: new (0)};\n\t\t}\n\t}\n\n\tresource function post user/createWithList (User[] payload) returns UserXmlOk|http:DefaultStatusCodeResponse {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {body: {}};\n\t\t}\n\t}\n\n\tresource function get user/login (string? username, string? password) returns xml|string|http:BadRequest {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function get user/logout () returns http:DefaultStatusCodeResponse {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {status: new (0)};\n\t\t}\n\t}\n\n\tresource function get user/[string username] () returns User|xml|http:BadRequest|http:NotFound {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n\n\tresource function put user/[string username] (User|xml|map<string> payload) returns http:DefaultStatusCodeResponse {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {status: new (0)};\n\t\t}\n\t}\n\n\tresource function delete user/[string username] () returns http:BadRequest|http:NotFound {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn http:BAD_REQUEST;\n\t\t}\n\t}\n}\n"
      }
    ],
    "config2/service_contract_Foo.bal": [
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "// AUTO-GENERATED FILE.\n// This file is auto-generated by the Ballerina OpenAPI tool.\n\nimport ballerina/http;\n\n@http:ServiceConfig {basePath: \"/api/v3\"}\ntype Foo service object {\n    *http:ServiceContract;\n    resource function put pet(@http:Payload Pet|xml|map<string> payload) returns Pet|xml|http:BadRequest|http:NotFound|StringMethodNotAllowed;\n    resource function post pet(@http:Payload Pet|xml|map<string> payload) returns PetXmlOk|http:MethodNotAllowed;\n    resource function get pet/findByStatus(\"available\"|\"pending\"|\"sold\" status = \"available\") returns Pet[]|xml|http:BadRequest;\n    resource function get pet/findByTags(string[]? tags) returns Pet[]|xml|http:BadRequest;\n    resource function get pet/[int petId]() returns Pet|xml|http:BadRequest|http:NotFound;\n    resource function post pet/[int petId](string? name, string? status) returns http:MethodNotAllowed;\n    resource function delete pet/[int petId](@http:Header string? api_key) returns http:BadRequest;\n    resource function post pet/[int petId]/uploadImage(string? additionalMetadata, @http:Payload byte[] payload) returns ApiResponseOk;\n    resource function get store/inventory() returns StoreInventoryResponse;\n    resource function post store/'order(@http:Payload Order|xml|map<string> payload) returns OrderOk|http:MethodNotAllowed;\n    resource function get store/'order/[int orderId]() returns Order|xml|http:BadRequest|http:NotFound;\n    resource function delete store/'order/[int orderId]() returns http:BadRequest|http:NotFound;\n    resource function post user(@http:Payload User|xml|map<string> payload) returns UserXmlDefault;\n    resource function post user/createWithList(@http:Payload User[] payload) returns UserXmlOk|http:DefaultStatusCodeResponse;\n    resource function get user/login(string? username, string? password) returns xml|string|http:BadRequest;\n    resource function get user/logout() returns http:DefaultStatusCodeResponse;\n    resource function get user/[string username]() returns User|xml|http:BadRequest|http:NotFound;\n    resource function put user/[string username](@http:Payload User|xml|map<string> payload) returns http:DefaultStatusCodeResponse;\n    resource function delete user/[string username]() returns http:BadRequest|http:NotFound;\n};\n\npublic type Order record {\n    int id?;\n    int petId?;\n    int:Signed32 quantity?;\n    string shipDate?;\n    # Order Status\n    \"placed\"|\"approved\"|\"delivered\" status?;\n    boolean complete?;\n};\n\npublic type UserXmlOk record {|\n    *http:Ok;\n    User|xml body;\n|};\n\npublic type Category record {\n    int id?;\n    string name?;\n};\n\npublic type User record {\n    int id?;\n    string username?;\n    string firstName?;\n    string lastName?;\n    string email?;\n    string password?;\n    string phone?;\n    # User Status\n    int:Signed32 userStatus?;\n};\n\npublic type PetXmlOk record {|\n    *http:Ok;\n    Pet|xml body;\n|};\n\npublic type StoreInventoryResponse record {|\n    int:Signed32...;\n|};\n\npublic type ApiResponseOk record {|\n    *http:Ok;\n    ApiResponse body;\n|};\n\npublic type ApiResponse record {\n    int:Signed32 code?;\n    string 'type?;\n    string message?;\n};\n\npublic type UserXmlDefault record {|\n    *http:DefaultStatusCodeResponse;\n    User|xml body;\n|};\n\npublic type StringMethodNotAllowed record {|\n    *http:MethodNotAllowed;\n    string body;\n|};\n\npublic type OrderOk record {|\n    *http:Ok;\n    Order body;\n|};\n\npublic type Tag record {\n    int id?;\n    string name?;\n};\n\npublic type Pet record {\n    int id?;\n    string name;\n    Category category?;\n    string[] photoUrls;\n    Tag[] tags?;\n    # pet status in the store\n    \"available\"|\"pending\"|\"sold\" status?;\n};\n"
      }
    ]
  },
  "name": "Foo",
  "listeners": [
    "l1",
    "l2"
  ]
}
