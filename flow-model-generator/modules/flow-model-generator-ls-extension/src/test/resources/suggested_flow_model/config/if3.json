{
  "start": {
    "line": 0,
    "offset": 0
  },
  "end": {
    "line": 4,
    "offset": 1
  },
  "source": "if.bal",
  "text": "   if flag {\n int j = 12 - 1;\n string val = j.toString() + \".\";\n    }",
  "position": {
    "line": 1,
    "offset": 4
  },
  "description": "",
  "forceAssign": false,
  "diagram": {
    "fileName": "if.bal",
    "nodes": [
      {
        "id": "32799",
        "metadata": {
          "label": "Start"
        },
        "codedata": {
          "node": "EVENT_START",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 0,
              "offset": 27
            },
            "endLine": {
              "line": 7,
              "offset": 1
            }
          },
          "sourceCode": "function fn1(boolean flag) {\n       if flag {\n int j = 12 - 1;\n string val = j.toString() + \".\";\n    }int i = 12;\n\n    string val = i.toString();\n}"
        },
        "returning": false,
        "flags": 0
      },
      {
        "id": "33051",
        "metadata": {
          "label": "If",
          "description": "Add conditional branch to the integration flow."
        },
        "codedata": {
          "node": "IF",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 1,
              "offset": 7
            },
            "endLine": {
              "line": 4,
              "offset": 5
            }
          },
          "sourceCode": "if flag {\n int j = 12 - 1;\n string val = j.toString() + \".\";\n    }"
        },
        "returning": false,
        "branches": [
          {
            "label": "Then",
            "kind": "BLOCK",
            "codedata": {
              "node": "CONDITIONAL",
              "lineRange": {
                "fileName": "if.bal",
                "startLine": {
                  "line": 1,
                  "offset": 15
                },
                "endLine": {
                  "line": 4,
                  "offset": 5
                }
              },
              "sourceCode": "{\n int j = 12 - 1;\n string val = j.toString() + \".\";\n    }"
            },
            "repeatable": "ONE_OR_MORE",
            "properties": {
              "condition": {
                "metadata": {
                  "label": "Condition",
                  "description": "Boolean Condition"
                },
                "valueType": "EXPRESSION",
                "value": "flag ",
                "placeholder": "true",
                "optional": false,
                "editable": true,
                "advanced": false
              }
            },
            "children": [
              {
                "id": "33775",
                "metadata": {
                  "label": "Variable",
                  "description": "Assign a value to a variable"
                },
                "codedata": {
                  "node": "VARIABLE",
                  "lineRange": {
                    "fileName": "if.bal",
                    "startLine": {
                      "line": 2,
                      "offset": 1
                    },
                    "endLine": {
                      "line": 2,
                      "offset": 16
                    }
                  },
                  "sourceCode": "int j = 12 - 1;"
                },
                "returning": false,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Initialize with value"
                    },
                    "valueType": "EXPRESSION",
                    "value": "12 - 1",
                    "optional": true,
                    "editable": true,
                    "advanced": false
                  },
                  "variable": {
                    "metadata": {
                      "label": "Name",
                      "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "j",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "type": {
                    "metadata": {
                      "label": "Type",
                      "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "int",
                    "placeholder": "var",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0,
                "suggested": true
              },
              {
                "id": "34784",
                "metadata": {
                  "label": "toString",
                  "description": "Performs a direct conversion of a value to a string.\n\nThe conversion is direct in the sense that when applied to a value that is already\na string it leaves the value unchanged.\n\nThe details of the conversion are specified by the ToString abstract operation\ndefined in the Ballerina Language Specification, using the direct style.\n\n```ballerina\ndecimal value = 12.12d;\nvalue.toString() ⇒ 12.12\nanydata[] data = [1, \"Sam\", 12.3f, 12.12d, {value: 12}];\ndata.toString() ⇒ [1,\"Sam\",12.3,12.12,{\"value\":12}]\n```\n",
                  "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_lang.value_0.0.0.png"
                },
                "codedata": {
                  "node": "METHOD_CALL",
                  "org": "ballerina",
                  "module": "lang.value",
                  "symbol": "toString",
                  "version": "0.0.0",
                  "lineRange": {
                    "fileName": "if.bal",
                    "startLine": {
                      "line": 3,
                      "offset": 1
                    },
                    "endLine": {
                      "line": 3,
                      "offset": 33
                    }
                  },
                  "sourceCode": "string val = j.toString() + \".\";"
                },
                "returning": false,
                "properties": {
                  "connection": {
                    "metadata": {
                      "label": "Connection",
                      "description": "Connection to use"
                    },
                    "valueType": "EXPRESSION",
                    "value": "j",
                    "optional": false,
                    "editable": false,
                    "advanced": false
                  },
                  "variable": {
                    "metadata": {
                      "label": "Variable Name",
                      "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "val",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "type": {
                    "metadata": {
                      "label": "Variable Type",
                      "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "string",
                    "placeholder": "var",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0,
                "suggested": true
              }
            ]
          }
        ],
        "flags": 0,
        "suggested": true
      },
      {
        "id": "35883",
        "metadata": {
          "label": "Variable",
          "description": "Assign a value to a variable"
        },
        "codedata": {
          "node": "VARIABLE",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 4,
              "offset": 5
            },
            "endLine": {
              "line": 4,
              "offset": 16
            }
          },
          "sourceCode": "int i = 12;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Initialize with value"
            },
            "valueType": "EXPRESSION",
            "value": "12",
            "optional": true,
            "editable": true,
            "advanced": false
          },
          "variable": {
            "metadata": {
              "label": "Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "i",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "int",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 0,
        "suggested": false
      },
      {
        "id": "37850",
        "metadata": {
          "label": "toString",
          "description": "Performs a direct conversion of a value to a string.\n\nThe conversion is direct in the sense that when applied to a value that is already\na string it leaves the value unchanged.\n\nThe details of the conversion are specified by the ToString abstract operation\ndefined in the Ballerina Language Specification, using the direct style.\n\n```ballerina\ndecimal value = 12.12d;\nvalue.toString() ⇒ 12.12\nanydata[] data = [1, \"Sam\", 12.3f, 12.12d, {value: 12}];\ndata.toString() ⇒ [1,\"Sam\",12.3,12.12,{\"value\":12}]\n```\n",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_lang.value_0.0.0.png"
        },
        "codedata": {
          "node": "METHOD_CALL",
          "org": "ballerina",
          "module": "lang.value",
          "symbol": "toString",
          "version": "0.0.0",
          "lineRange": {
            "fileName": "if.bal",
            "startLine": {
              "line": 6,
              "offset": 4
            },
            "endLine": {
              "line": 6,
              "offset": 30
            }
          },
          "sourceCode": "string val = i.toString();"
        },
        "returning": false,
        "properties": {
          "connection": {
            "metadata": {
              "label": "Connection",
              "description": "Connection to use"
            },
            "valueType": "EXPRESSION",
            "value": "i",
            "optional": false,
            "editable": false,
            "advanced": false
          },
          "variable": {
            "metadata": {
              "label": "Variable Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "val",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Variable Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "string",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 0,
        "suggested": false
      }
    ],
    "connections": []
  }
}
