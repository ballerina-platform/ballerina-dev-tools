{
  "start": {
    "line": 15,
    "offset": 4
  },
  "end": {
    "line": 56,
    "offset": 5
  },
  "source": "currency_converter/main.bal",
  "description": "Tests a simple diagram flow",
  "diagram": {
    "fileName": "main.bal",
    "nodes": [
      {
        "id": "51465",
        "metadata": {
          "label": "Start"
        },
        "codedata": {
          "node": "EVENT_START",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 15,
              "offset": 115
            },
            "endLine": {
              "line": 56,
              "offset": 5
            }
          },
          "sourceCode": "// http api event\n    resource function get converter(string 'from, string to, decimal amount) returns json|http:InternalServerError {\n        // error handler\n        do {\n            // new data\n            string key = 'from + \"-\" + to;\n            // action call - redis get call\n            string? cacheValue = check redisClient->get(key);\n\n            // if node\n            if cacheValue is string {\n                // new data\n                json newData = {\n                    value: check calculate(amount, cacheValue)\n                };\n                // return\n                return newData;\n            } else {\n                // action call - http get call\n                json response = check currencyClient->get(\"/latest?base=\" + 'from + \"&to=\" + to);\n\n                // new data\n                decimal value = check response.value;\n                // function call\n                decimal convertedAmount = check calculate(amount, value.toString());\n\n                // action call - redis set call\n                _ = check redisClient->set(key, convertedAmount.toString());\n\n                // new data\n                json newData = {\n                    value\n                };\n                // return\n                return newData;\n            }\n        } on fail error e {\n            // library call - log error\n            log:printError(\"error occured\", e);\n            // return \n            return http:INTERNAL_SERVER_ERROR;\n        }\n    }"
        },
        "returning": false,
        "flags": 0
      },
      {
        "id": "47640",
        "metadata": {
          "label": "Comment",
          "description": "error handler"
        },
        "codedata": {
          "node": "COMMENT",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 16,
              "offset": 0
            },
            "endLine": {
              "line": 16,
              "offset": 24
            }
          },
          "sourceCode": "error handler"
        },
        "returning": false,
        "properties": {
          "comment": {
            "metadata": {
              "label": "Comment",
              "description": "Comment to describe the flow"
            },
            "valueType": "STRING",
            "value": "error handler",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 0
      },
      {
        "id": "50043",
        "metadata": {
          "label": "ErrorHandler",
          "description": "Catch and handle errors"
        },
        "codedata": {
          "node": "ERROR_HANDLER",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 17,
              "offset": 8
            },
            "endLine": {
              "line": 55,
              "offset": 9
            }
          },
          "sourceCode": "// error handler\n        do {\n            // new data\n            string key = 'from + \"-\" + to;\n            // action call - redis get call\n            string? cacheValue = check redisClient->get(key);\n\n            // if node\n            if cacheValue is string {\n                // new data\n                json newData = {\n                    value: check calculate(amount, cacheValue)\n                };\n                // return\n                return newData;\n            } else {\n                // action call - http get call\n                json response = check currencyClient->get(\"/latest?base=\" + 'from + \"&to=\" + to);\n\n                // new data\n                decimal value = check response.value;\n                // function call\n                decimal convertedAmount = check calculate(amount, value.toString());\n\n                // action call - redis set call\n                _ = check redisClient->set(key, convertedAmount.toString());\n\n                // new data\n                json newData = {\n                    value\n                };\n                // return\n                return newData;\n            }\n        } on fail error e {\n            // library call - log error\n            log:printError(\"error occured\", e);\n            // return \n            return http:INTERNAL_SERVER_ERROR;\n        }"
        },
        "returning": false,
        "branches": [
          {
            "label": "Body",
            "kind": "BLOCK",
            "codedata": {
              "node": "BODY",
              "lineRange": {
                "fileName": "main.bal",
                "startLine": {
                  "line": 17,
                  "offset": 11
                },
                "endLine": {
                  "line": 50,
                  "offset": 9
                }
              },
              "sourceCode": "{\n            // new data\n            string key = 'from + \"-\" + to;\n            // action call - redis get call\n            string? cacheValue = check redisClient->get(key);\n\n            // if node\n            if cacheValue is string {\n                // new data\n                json newData = {\n                    value: check calculate(amount, cacheValue)\n                };\n                // return\n                return newData;\n            } else {\n                // action call - http get call\n                json response = check currencyClient->get(\"/latest?base=\" + 'from + \"&to=\" + to);\n\n                // new data\n                decimal value = check response.value;\n                // function call\n                decimal convertedAmount = check calculate(amount, value.toString());\n\n                // action call - redis set call\n                _ = check redisClient->set(key, convertedAmount.toString());\n\n                // new data\n                json newData = {\n                    value\n                };\n                // return\n                return newData;\n            }\n        }"
            },
            "repeatable": "ONE",
            "children": [
              {
                "id": "49623",
                "metadata": {
                  "label": "Comment",
                  "description": "new data"
                },
                "codedata": {
                  "node": "COMMENT",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 18,
                      "offset": 0
                    },
                    "endLine": {
                      "line": 18,
                      "offset": 23
                    }
                  },
                  "sourceCode": "new data"
                },
                "returning": false,
                "properties": {
                  "comment": {
                    "metadata": {
                      "label": "Comment",
                      "description": "Comment to describe the flow"
                    },
                    "valueType": "STRING",
                    "value": "new data",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              },
              {
                "id": "51006",
                "metadata": {
                  "label": "Variable",
                  "description": "Assign a value to a variable"
                },
                "codedata": {
                  "node": "VARIABLE",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 19,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 19,
                      "offset": 42
                    }
                  },
                  "sourceCode": "// new data\n            string key = 'from + \"-\" + to;"
                },
                "returning": false,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Expression"
                    },
                    "valueType": "EXPRESSION",
                    "value": "'from + \"-\" + to",
                    "optional": true,
                    "editable": true,
                    "advanced": false
                  },
                  "variable": {
                    "metadata": {
                      "label": "Name",
                      "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "key",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "type": {
                    "metadata": {
                      "label": "Type",
                      "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "string",
                    "placeholder": "var",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              },
              {
                "id": "51627",
                "metadata": {
                  "label": "Comment",
                  "description": "action call - redis get call"
                },
                "codedata": {
                  "node": "COMMENT",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 20,
                      "offset": 0
                    },
                    "endLine": {
                      "line": 20,
                      "offset": 43
                    }
                  },
                  "sourceCode": "action call - redis get call"
                },
                "returning": false,
                "properties": {
                  "comment": {
                    "metadata": {
                      "label": "Comment",
                      "description": "Comment to describe the flow"
                    },
                    "valueType": "STRING",
                    "value": "action call - redis get call",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              },
              {
                "id": "53009",
                "metadata": {
                  "label": "get",
                  "description": "Get value of key.\n",
                  "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_redis_3.0.2.png"
                },
                "codedata": {
                  "node": "REMOTE_ACTION_CALL",
                  "org": "ballerinax",
                  "module": "redis",
                  "object": "Client",
                  "symbol": "get",
                  "version": "3.0.2",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 21,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 21,
                      "offset": 61
                    }
                  },
                  "sourceCode": "// action call - redis get call\n            string? cacheValue = check redisClient->get(key);"
                },
                "returning": false,
                "properties": {
                  "connection": {
                    "metadata": {
                      "label": "Connection",
                      "description": "Connection to use"
                    },
                    "valueType": "EXPRESSION",
                    "value": "redisClient",
                    "optional": false,
                    "editable": false,
                    "advanced": false
                  },
                  "key": {
                    "metadata": {
                      "label": "key",
                      "description": "Key referring to a value"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "string",
                    "value": "key",
                    "placeholder": "\"\"",
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "kind": "REQUIRED"
                  },
                  "checkError": {
                    "metadata": {
                      "label": "Check Error",
                      "description": "Trigger error flow"
                    },
                    "valueType": "FLAG",
                    "value": true,
                    "optional": false,
                    "editable": true,
                    "advanced": true
                  },
                  "variable": {
                    "metadata": {
                      "label": "Variable Name",
                      "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "cacheValue",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "type": {
                    "metadata": {
                      "label": "Variable Type",
                      "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "string|()",
                    "placeholder": "var",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 1
              },
              {
                "id": "53621",
                "metadata": {
                  "label": "Comment",
                  "description": "if node"
                },
                "codedata": {
                  "node": "COMMENT",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 22,
                      "offset": 0
                    },
                    "endLine": {
                      "line": 23,
                      "offset": 22
                    }
                  },
                  "sourceCode": "if node"
                },
                "returning": false,
                "properties": {
                  "comment": {
                    "metadata": {
                      "label": "Comment",
                      "description": "Comment to describe the flow"
                    },
                    "valueType": "STRING",
                    "value": "if node",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              },
              {
                "id": "56712",
                "metadata": {
                  "label": "If",
                  "description": "Add conditional branch to the integration flow."
                },
                "codedata": {
                  "node": "IF",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 24,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 49,
                      "offset": 13
                    }
                  },
                  "sourceCode": "// if node\n            if cacheValue is string {\n                // new data\n                json newData = {\n                    value: check calculate(amount, cacheValue)\n                };\n                // return\n                return newData;\n            } else {\n                // action call - http get call\n                json response = check currencyClient->get(\"/latest?base=\" + 'from + \"&to=\" + to);\n\n                // new data\n                decimal value = check response.value;\n                // function call\n                decimal convertedAmount = check calculate(amount, value.toString());\n\n                // action call - redis set call\n                _ = check redisClient->set(key, convertedAmount.toString());\n\n                // new data\n                json newData = {\n                    value\n                };\n                // return\n                return newData;\n            }"
                },
                "returning": false,
                "branches": [
                  {
                    "label": "Then",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "CONDITIONAL",
                      "lineRange": {
                        "fileName": "main.bal",
                        "startLine": {
                          "line": 24,
                          "offset": 36
                        },
                        "endLine": {
                          "line": 31,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                // new data\n                json newData = {\n                    value: check calculate(amount, cacheValue)\n                };\n                // return\n                return newData;\n            }"
                    },
                    "repeatable": "ONE_OR_MORE",
                    "properties": {
                      "condition": {
                        "metadata": {
                          "label": "Condition",
                          "description": "Boolean Condition"
                        },
                        "valueType": "EXPRESSION",
                        "value": "cacheValue is string ",
                        "placeholder": "true",
                        "optional": false,
                        "editable": true,
                        "advanced": false
                      }
                    },
                    "children": [
                      {
                        "id": "56571",
                        "metadata": {
                          "label": "Comment",
                          "description": "new data"
                        },
                        "codedata": {
                          "node": "COMMENT",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 25,
                              "offset": 0
                            },
                            "endLine": {
                              "line": 25,
                              "offset": 27
                            }
                          },
                          "sourceCode": "new data"
                        },
                        "returning": false,
                        "properties": {
                          "comment": {
                            "metadata": {
                              "label": "Comment",
                              "description": "Comment to describe the flow"
                            },
                            "valueType": "STRING",
                            "value": "new data",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "58112",
                        "metadata": {
                          "label": "Variable",
                          "description": "Assign a value to a variable"
                        },
                        "codedata": {
                          "node": "VARIABLE",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 26,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 28,
                              "offset": 18
                            }
                          },
                          "sourceCode": "// new data\n                json newData = {\n                    value: check calculate(amount, cacheValue)\n                };"
                        },
                        "returning": false,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Expression"
                            },
                            "valueType": "EXPRESSION",
                            "value": "{\n                    value: check calculate(amount, cacheValue)\n                }",
                            "optional": true,
                            "editable": true,
                            "advanced": false
                          },
                          "variable": {
                            "metadata": {
                              "label": "Name",
                              "description": "Name of the variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "newData",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          },
                          "type": {
                            "metadata": {
                              "label": "Type",
                              "description": "Type of the variable"
                            },
                            "valueType": "TYPE",
                            "value": "json",
                            "placeholder": "var",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "60537",
                        "metadata": {
                          "label": "Comment",
                          "description": "return"
                        },
                        "codedata": {
                          "node": "COMMENT",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 29,
                              "offset": 0
                            },
                            "endLine": {
                              "line": 29,
                              "offset": 25
                            }
                          },
                          "sourceCode": "return"
                        },
                        "returning": false,
                        "properties": {
                          "comment": {
                            "metadata": {
                              "label": "Comment",
                              "description": "Comment to describe the flow"
                            },
                            "valueType": "STRING",
                            "value": "return",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "62031",
                        "metadata": {
                          "label": "Return",
                          "description": "Value of 'newData'"
                        },
                        "codedata": {
                          "node": "RETURN",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 30,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 30,
                              "offset": 31
                            }
                          },
                          "sourceCode": "// return\n                return newData;"
                        },
                        "returning": true,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Return value"
                            },
                            "valueType": "EXPRESSION",
                            "value": "newData",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      }
                    ]
                  },
                  {
                    "label": "Else",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "ELSE",
                      "lineRange": {
                        "fileName": "main.bal",
                        "startLine": {
                          "line": 31,
                          "offset": 19
                        },
                        "endLine": {
                          "line": 49,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                // action call - http get call\n                json response = check currencyClient->get(\"/latest?base=\" + 'from + \"&to=\" + to);\n\n                // new data\n                decimal value = check response.value;\n                // function call\n                decimal convertedAmount = check calculate(amount, value.toString());\n\n                // action call - redis set call\n                _ = check redisClient->set(key, convertedAmount.toString());\n\n                // new data\n                json newData = {\n                    value\n                };\n                // return\n                return newData;\n            }"
                    },
                    "repeatable": "ZERO_OR_ONE",
                    "children": [
                      {
                        "id": "63534",
                        "metadata": {
                          "label": "Comment",
                          "description": "action call - http get call"
                        },
                        "codedata": {
                          "node": "COMMENT",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 32,
                              "offset": 0
                            },
                            "endLine": {
                              "line": 32,
                              "offset": 46
                            }
                          },
                          "sourceCode": "action call - http get call"
                        },
                        "returning": false,
                        "properties": {
                          "comment": {
                            "metadata": {
                              "label": "Comment",
                              "description": "Comment to describe the flow"
                            },
                            "valueType": "STRING",
                            "value": "action call - http get call",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "65073",
                        "metadata": {
                          "label": "get",
                          "description": "The `Client.get()` function can be used to send HTTP GET requests to HTTP endpoints.\n",
                          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.2.png"
                        },
                        "codedata": {
                          "node": "REMOTE_ACTION_CALL",
                          "org": "ballerina",
                          "module": "http",
                          "object": "Client",
                          "symbol": "get",
                          "version": "2.12.2",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 33,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 33,
                              "offset": 97
                            }
                          },
                          "sourceCode": "// action call - http get call\n                json response = check currencyClient->get(\"/latest?base=\" + 'from + \"&to=\" + to);"
                        },
                        "returning": false,
                        "properties": {
                          "connection": {
                            "metadata": {
                              "label": "Connection",
                              "description": "Connection to use"
                            },
                            "valueType": "EXPRESSION",
                            "value": "currencyClient",
                            "optional": false,
                            "editable": false,
                            "advanced": false
                          },
                          "path": {
                            "metadata": {
                              "label": "path",
                              "description": "Request path"
                            },
                            "valueType": "EXPRESSION",
                            "valueTypeConstraint": "string",
                            "value": "\"/latest?base=\" + 'from + \"&to=\" + to",
                            "placeholder": "\"\"",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "kind": "REQUIRED"
                          },
                          "headers": {
                            "metadata": {
                              "label": "headers",
                              "description": "The entity headers"
                            },
                            "valueType": "EXPRESSION",
                            "valueTypeConstraint": "map<string|string[]>|()",
                            "value": "()",
                            "placeholder": "()",
                            "optional": true,
                            "editable": true,
                            "advanced": true,
                            "kind": "DEFAULTABLE"
                          },
                          "targetType": {
                            "metadata": {
                              "label": "targetType",
                              "description": "HTTP response, `anydata` or stream of HTTP SSE, which is expected to be returned after data binding"
                            },
                            "valueType": "EXPRESSION",
                            "valueTypeConstraint": "json",
                            "value": "json",
                            "placeholder": "json",
                            "optional": true,
                            "editable": true,
                            "advanced": true,
                            "kind": "PARAM_FOR_TYPE_INFER"
                          },
                          "checkError": {
                            "metadata": {
                              "label": "Check Error",
                              "description": "Trigger error flow"
                            },
                            "valueType": "FLAG",
                            "value": true,
                            "optional": false,
                            "editable": true,
                            "advanced": true
                          },
                          "variable": {
                            "metadata": {
                              "label": "Variable Name",
                              "description": "Name of the variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "response",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          },
                          "type": {
                            "metadata": {
                              "label": "Variable Type",
                              "description": "Type of the variable"
                            },
                            "valueType": "TYPE",
                            "value": "json",
                            "placeholder": "var",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 1
                      },
                      {
                        "id": "65530",
                        "metadata": {
                          "label": "Comment",
                          "description": "new data"
                        },
                        "codedata": {
                          "node": "COMMENT",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 34,
                              "offset": 0
                            },
                            "endLine": {
                              "line": 35,
                              "offset": 27
                            }
                          },
                          "sourceCode": "new data"
                        },
                        "returning": false,
                        "properties": {
                          "comment": {
                            "metadata": {
                              "label": "Comment",
                              "description": "Comment to describe the flow"
                            },
                            "valueType": "STRING",
                            "value": "new data",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "68005",
                        "metadata": {
                          "label": "Variable",
                          "description": "Assign a value to a variable"
                        },
                        "codedata": {
                          "node": "VARIABLE",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 36,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 36,
                              "offset": 53
                            }
                          },
                          "sourceCode": "// new data\n                decimal value = check response.value;"
                        },
                        "returning": false,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Expression"
                            },
                            "valueType": "EXPRESSION",
                            "value": "check response.value",
                            "optional": true,
                            "editable": true,
                            "advanced": false
                          },
                          "variable": {
                            "metadata": {
                              "label": "Name",
                              "description": "Name of the variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "value",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          },
                          "type": {
                            "metadata": {
                              "label": "Type",
                              "description": "Type of the variable"
                            },
                            "valueType": "TYPE",
                            "value": "decimal",
                            "placeholder": "var",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "68480",
                        "metadata": {
                          "label": "Comment",
                          "description": "function call"
                        },
                        "codedata": {
                          "node": "COMMENT",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 37,
                              "offset": 0
                            },
                            "endLine": {
                              "line": 37,
                              "offset": 32
                            }
                          },
                          "sourceCode": "function call"
                        },
                        "returning": false,
                        "properties": {
                          "comment": {
                            "metadata": {
                              "label": "Comment",
                              "description": "Comment to describe the flow"
                            },
                            "valueType": "STRING",
                            "value": "function call",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "70020",
                        "metadata": {
                          "label": "calculate",
                          "description": ""
                        },
                        "codedata": {
                          "node": "FUNCTION_CALL",
                          "org": "nipunaf",
                          "module": "currency_converter",
                          "symbol": "calculate",
                          "version": "0.1.0",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 38,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 38,
                              "offset": 84
                            }
                          },
                          "sourceCode": "// function call\n                decimal convertedAmount = check calculate(amount, value.toString());"
                        },
                        "returning": false,
                        "properties": {
                          "view": {
                            "metadata": {
                              "label": "View",
                              "description": "Function definition location"
                            },
                            "valueType": "VIEW",
                            "value": {
                              "fileName": "main.bal",
                              "startLine": {
                                "line": 59,
                                "offset": 0
                              },
                              "endLine": {
                                "line": 60,
                                "offset": 53
                              }
                            },
                            "optional": false,
                            "editable": false,
                            "advanced": false
                          },
                          "amount": {
                            "metadata": {
                              "label": "amount"
                            },
                            "valueType": "EXPRESSION",
                            "valueTypeConstraint": "decimal",
                            "value": "amount",
                            "placeholder": "0.0d",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "kind": "REQUIRED"
                          },
                          "cacheValue": {
                            "metadata": {
                              "label": "cacheValue"
                            },
                            "valueType": "EXPRESSION",
                            "valueTypeConstraint": "string",
                            "value": "value.toString()",
                            "placeholder": "\"\"",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "kind": "REQUIRED"
                          },
                          "checkError": {
                            "metadata": {
                              "label": "Check Error",
                              "description": "Trigger error flow"
                            },
                            "valueType": "FLAG",
                            "value": true,
                            "optional": false,
                            "editable": true,
                            "advanced": true
                          },
                          "variable": {
                            "metadata": {
                              "label": "Variable Name",
                              "description": "Name of the variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "convertedAmount",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          },
                          "type": {
                            "metadata": {
                              "label": "Variable Type",
                              "description": "Type of the variable"
                            },
                            "valueType": "TYPE",
                            "value": "decimal",
                            "placeholder": "var",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 1
                      },
                      {
                        "id": "70510",
                        "metadata": {
                          "label": "Comment",
                          "description": "action call - redis set call"
                        },
                        "codedata": {
                          "node": "COMMENT",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 39,
                              "offset": 0
                            },
                            "endLine": {
                              "line": 40,
                              "offset": 47
                            }
                          },
                          "sourceCode": "action call - redis set call"
                        },
                        "returning": false,
                        "properties": {
                          "comment": {
                            "metadata": {
                              "label": "Comment",
                              "description": "Comment to describe the flow"
                            },
                            "valueType": "STRING",
                            "value": "action call - redis set call",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "72988",
                        "metadata": {
                          "label": "set",
                          "description": "Set the value of a key.\n",
                          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_redis_3.0.2.png"
                        },
                        "codedata": {
                          "node": "REMOTE_ACTION_CALL",
                          "org": "ballerinax",
                          "module": "redis",
                          "object": "Client",
                          "symbol": "set",
                          "version": "3.0.2",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 41,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 41,
                              "offset": 76
                            }
                          },
                          "sourceCode": "// action call - redis set call\n                _ = check redisClient->set(key, convertedAmount.toString());"
                        },
                        "returning": false,
                        "properties": {
                          "connection": {
                            "metadata": {
                              "label": "Connection",
                              "description": "Connection to use"
                            },
                            "valueType": "EXPRESSION",
                            "value": "redisClient",
                            "optional": false,
                            "editable": false,
                            "advanced": false
                          },
                          "key": {
                            "metadata": {
                              "label": "key",
                              "description": "Key referring to a value"
                            },
                            "valueType": "EXPRESSION",
                            "valueTypeConstraint": "string",
                            "value": "key",
                            "placeholder": "\"\"",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "kind": "REQUIRED"
                          },
                          "value": {
                            "metadata": {
                              "label": "value",
                              "description": "Values"
                            },
                            "valueType": "EXPRESSION",
                            "valueTypeConstraint": "string",
                            "value": "convertedAmount.toString()",
                            "placeholder": "\"\"",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "kind": "REQUIRED"
                          },
                          "checkError": {
                            "metadata": {
                              "label": "Check Error",
                              "description": "Trigger error flow"
                            },
                            "valueType": "FLAG",
                            "value": true,
                            "optional": false,
                            "editable": true,
                            "advanced": true
                          }
                        },
                        "flags": 1
                      },
                      {
                        "id": "73466",
                        "metadata": {
                          "label": "Comment",
                          "description": "new data"
                        },
                        "codedata": {
                          "node": "COMMENT",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 42,
                              "offset": 0
                            },
                            "endLine": {
                              "line": 43,
                              "offset": 27
                            }
                          },
                          "sourceCode": "new data"
                        },
                        "returning": false,
                        "properties": {
                          "comment": {
                            "metadata": {
                              "label": "Comment",
                              "description": "Comment to describe the flow"
                            },
                            "valueType": "STRING",
                            "value": "new data",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "75968",
                        "metadata": {
                          "label": "Variable",
                          "description": "Assign a value to a variable"
                        },
                        "codedata": {
                          "node": "VARIABLE",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 44,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 46,
                              "offset": 18
                            }
                          },
                          "sourceCode": "// new data\n                json newData = {\n                    value\n                };"
                        },
                        "returning": false,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Expression"
                            },
                            "valueType": "EXPRESSION",
                            "value": "{\n                    value\n                }",
                            "optional": true,
                            "editable": true,
                            "advanced": false
                          },
                          "variable": {
                            "metadata": {
                              "label": "Name",
                              "description": "Name of the variable"
                            },
                            "valueType": "IDENTIFIER",
                            "value": "newData",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          },
                          "type": {
                            "metadata": {
                              "label": "Type",
                              "description": "Type of the variable"
                            },
                            "valueType": "TYPE",
                            "value": "json",
                            "placeholder": "var",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "78393",
                        "metadata": {
                          "label": "Comment",
                          "description": "return"
                        },
                        "codedata": {
                          "node": "COMMENT",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 47,
                              "offset": 0
                            },
                            "endLine": {
                              "line": 47,
                              "offset": 25
                            }
                          },
                          "sourceCode": "return"
                        },
                        "returning": false,
                        "properties": {
                          "comment": {
                            "metadata": {
                              "label": "Comment",
                              "description": "Comment to describe the flow"
                            },
                            "valueType": "STRING",
                            "value": "return",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "79887",
                        "metadata": {
                          "label": "Return",
                          "description": "Value of 'newData'"
                        },
                        "codedata": {
                          "node": "RETURN",
                          "lineRange": {
                            "fileName": "main.bal",
                            "startLine": {
                              "line": 48,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 48,
                              "offset": 31
                            }
                          },
                          "sourceCode": "// return\n                return newData;"
                        },
                        "returning": true,
                        "properties": {
                          "expression": {
                            "metadata": {
                              "label": "Expression",
                              "description": "Return value"
                            },
                            "valueType": "EXPRESSION",
                            "value": "newData",
                            "optional": false,
                            "editable": true,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      }
                    ]
                  }
                ],
                "flags": 0
              }
            ]
          },
          {
            "label": "On Failure",
            "kind": "BLOCK",
            "codedata": {
              "node": "ON_FAILURE",
              "lineRange": {
                "fileName": "main.bal",
                "startLine": {
                  "line": 50,
                  "offset": 26
                },
                "endLine": {
                  "line": 55,
                  "offset": 9
                }
              },
              "sourceCode": "{\n            // library call - log error\n            log:printError(\"error occured\", e);\n            // return \n            return http:INTERNAL_SERVER_ERROR;\n        }"
            },
            "repeatable": "ZERO_OR_ONE",
            "properties": {
              "ignore": {
                "metadata": {
                  "label": "Ignore",
                  "description": "Ignore the error value"
                },
                "valueType": "EXPRESSION",
                "value": "false",
                "optional": false,
                "editable": true,
                "advanced": false
              },
              "errorVariable": {
                "metadata": {
                  "label": "Error Variable",
                  "description": "Name of the error variable"
                },
                "valueType": "IDENTIFIER",
                "value": "e ",
                "placeholder": "err",
                "optional": false,
                "editable": true,
                "advanced": false
              },
              "errorType": {
                "metadata": {
                  "label": "Error Type",
                  "description": "Type of the error"
                },
                "valueType": "TYPE",
                "value": "redis:error|error|http:error|error",
                "placeholder": "error",
                "optional": false,
                "editable": true,
                "advanced": false
              }
            },
            "children": [
              {
                "id": "82375",
                "metadata": {
                  "label": "Comment",
                  "description": "library call - log error"
                },
                "codedata": {
                  "node": "COMMENT",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 51,
                      "offset": 0
                    },
                    "endLine": {
                      "line": 51,
                      "offset": 39
                    }
                  },
                  "sourceCode": "library call - log error"
                },
                "returning": false,
                "properties": {
                  "comment": {
                    "metadata": {
                      "label": "Comment",
                      "description": "Comment to describe the flow"
                    },
                    "valueType": "STRING",
                    "value": "library call - log error",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              },
              {
                "id": "83747",
                "metadata": {
                  "label": "printError",
                  "description": "Prints error logs.\n```ballerina\nerror e = error(\"error occurred\");\nlog:printError(\"error log with cause\", 'error = e, id = 845315);\n```\n",
                  "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_log_2.10.0.png"
                },
                "codedata": {
                  "node": "FUNCTION_CALL",
                  "org": "ballerina",
                  "module": "log",
                  "symbol": "printError",
                  "version": "2.10.0",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 52,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 52,
                      "offset": 47
                    }
                  },
                  "sourceCode": "// library call - log error\n            log:printError(\"error occured\", e);"
                },
                "returning": false,
                "properties": {
                  "msg": {
                    "metadata": {
                      "label": "msg",
                      "description": "The message to be logged"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "string",
                    "value": "\"error occured\"",
                    "placeholder": "\"\"",
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "kind": "REQUIRED"
                  },
                  "'error": {
                    "metadata": {
                      "label": "'error",
                      "description": "The error struct to be logged"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "error|()",
                    "value": "e",
                    "placeholder": "()",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "kind": "DEFAULTABLE"
                  },
                  "stackTrace": {
                    "metadata": {
                      "label": "stackTrace",
                      "description": "The error stack trace to be logged"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "ballerina/lang.error:0.0.0:StackFrame[]|()",
                    "value": "()",
                    "placeholder": "()",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "kind": "DEFAULTABLE"
                  },
                  "Additional Values": {
                    "metadata": {
                      "label": "Additional Values",
                      "description": "Capture key value pairs"
                    },
                    "valueType": "MAPPING_EXPRESSION_SET",
                    "valueTypeConstraint": "log:Value",
                    "value": [],
                    "placeholder": "",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "kind": "INCLUDED_RECORD_REST"
                  }
                },
                "flags": 0
              },
              {
                "id": "84342",
                "metadata": {
                  "label": "Comment",
                  "description": "return "
                },
                "codedata": {
                  "node": "COMMENT",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 53,
                      "offset": 0
                    },
                    "endLine": {
                      "line": 53,
                      "offset": 22
                    }
                  },
                  "sourceCode": "return "
                },
                "returning": false,
                "properties": {
                  "comment": {
                    "metadata": {
                      "label": "Comment",
                      "description": "Comment to describe the flow"
                    },
                    "valueType": "STRING",
                    "value": "return ",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              },
              {
                "id": "85730",
                "metadata": {
                  "label": "Return",
                  "description": "Value of 'http:INTERNAL_SERVER_ERROR'"
                },
                "codedata": {
                  "node": "RETURN",
                  "lineRange": {
                    "fileName": "main.bal",
                    "startLine": {
                      "line": 54,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 54,
                      "offset": 46
                    }
                  },
                  "sourceCode": "// return \n            return http:INTERNAL_SERVER_ERROR;"
                },
                "returning": true,
                "properties": {
                  "expression": {
                    "metadata": {
                      "label": "Expression",
                      "description": "Return value"
                    },
                    "valueType": "EXPRESSION",
                    "value": "http:INTERNAL_SERVER_ERROR",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              }
            ]
          }
        ],
        "flags": 0
      }
    ],
    "connections": [
      {
        "id": "42750",
        "metadata": {
          "label": "New Connection",
          "description": "The HTTP client provides the capability for initiating contact with a remote HTTP service. The API it\nprovides includes the functions for the standard HTTP methods forwarding a received request and sending requests\nusing custom HTTP verbs.",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.12.2.png"
        },
        "codedata": {
          "node": "NEW_CONNECTION",
          "org": "ballerina",
          "module": "http",
          "object": "Client",
          "symbol": "init",
          "version": "2.12.2",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 11,
              "offset": 0
            },
            "endLine": {
              "line": 11,
              "offset": 94
            }
          },
          "sourceCode": "// new connection\nfinal http:Client currencyClient = check new (url = \"https://api.exchangeratesapi.io/latest\");"
        },
        "returning": false,
        "properties": {
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Global",
            "optional": false,
            "editable": true,
            "advanced": true
          },
          "checkError": {
            "metadata": {
              "label": "Check Error",
              "description": "Terminate on error"
            },
            "valueType": "FLAG",
            "value": true,
            "optional": false,
            "editable": false,
            "advanced": true
          },
          "url": {
            "metadata": {
              "label": "url",
              "description": "URL of the target service"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "value": "\"https://api.exchangeratesapi.io/latest\"",
            "placeholder": "\"\"",
            "optional": false,
            "editable": true,
            "advanced": false,
            "kind": "REQUIRED"
          },
          "httpVersion": {
            "metadata": {
              "label": "httpVersion",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "\"2.0\"|\"1.1\"|\"1.0\"",
            "value": "\"2.0\"",
            "placeholder": "\"2.0\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "http1Settings": {
            "metadata": {
              "label": "http1Settings",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "record {|ballerina/http:2.12.2:KeepAlive keepAlive; ballerina/http:2.12.2:Chunking chunking; ballerina/http:2.12.2:ProxyConfig? proxy;|}",
            "value": "{}",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "http2Settings": {
            "metadata": {
              "label": "http2Settings",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "record {|boolean http2PriorKnowledge; int http2InitialWindowSize;|}",
            "value": "{}",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "timeout": {
            "metadata": {
              "label": "timeout",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "decimal",
            "value": "0.0d",
            "placeholder": "0.0d",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "forwarded": {
            "metadata": {
              "label": "forwarded",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "value": "\"\"",
            "placeholder": "\"\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "followRedirects": {
            "metadata": {
              "label": "followRedirects",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:FollowRedirects|()",
            "value": "()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "poolConfig": {
            "metadata": {
              "label": "poolConfig",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:PoolConfiguration|()",
            "value": "()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "cache": {
            "metadata": {
              "label": "cache",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "record {|boolean enabled; boolean isShared; int capacity; float evictionFactor; ballerina/http:2.12.2:CachingPolicy policy;|}",
            "value": "{}",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "compression": {
            "metadata": {
              "label": "compression",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "\"AUTO\"|\"ALWAYS\"|\"NEVER\"",
            "value": "\"AUTO\"",
            "placeholder": "\"AUTO\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "auth": {
            "metadata": {
              "label": "auth",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:CredentialsConfig|http:BearerTokenConfig|http:JwtIssuerConfig|http:OAuth2ClientCredentialsGrantConfig|http:OAuth2PasswordGrantConfig|http:OAuth2RefreshTokenGrantConfig|http:OAuth2JwtBearerGrantConfig|()",
            "value": "()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "circuitBreaker": {
            "metadata": {
              "label": "circuitBreaker",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:CircuitBreakerConfig|()",
            "value": "()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "retryConfig": {
            "metadata": {
              "label": "retryConfig",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:RetryConfig|()",
            "value": "()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "cookieConfig": {
            "metadata": {
              "label": "cookieConfig",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:CookieConfig|()",
            "value": "()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "responseLimits": {
            "metadata": {
              "label": "responseLimits",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "record {|int maxStatusLineLength; int maxHeaderSize; int maxEntityBodySize;|}",
            "value": "{}",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "proxy": {
            "metadata": {
              "label": "proxy",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ProxyConfig|()",
            "value": "()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "validation": {
            "metadata": {
              "label": "validation",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "boolean",
            "value": "false",
            "placeholder": "false",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "socketConfig": {
            "metadata": {
              "label": "socketConfig",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "record {|decimal connectTimeOut; int receiveBufferSize; int sendBufferSize; boolean tcpNoDelay; boolean socketReuse; boolean keepAlive;|}",
            "value": "{}",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "secureSocket": {
            "metadata": {
              "label": "secureSocket",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ClientSecureSocket|()",
            "value": "()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "variable": {
            "metadata": {
              "label": "Connection Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "currencyClient",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Connection Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "http:Client",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 1
      },
      {
        "id": "36800",
        "metadata": {
          "label": "New Connection",
          "description": "Ballerina Redis connector provides the capability to access Redis cache.\nThis connector lets you to perform operations to access and manipulate key-value data stored in a Redis database. \n",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_redis_3.0.2.png"
        },
        "codedata": {
          "node": "NEW_CONNECTION",
          "org": "ballerinax",
          "module": "redis",
          "object": "Client",
          "symbol": "init",
          "version": "3.0.2",
          "lineRange": {
            "fileName": "main.bal",
            "startLine": {
              "line": 5,
              "offset": 0
            },
            "endLine": {
              "line": 8,
              "offset": 3
            }
          },
          "sourceCode": "// new connection\nfinal redis:Client redisClient = check new (connection = {\n    host: \"localhost\",\n    port: 6379\n});"
        },
        "returning": false,
        "properties": {
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Global",
            "optional": false,
            "editable": true,
            "advanced": true
          },
          "checkError": {
            "metadata": {
              "label": "Check Error",
              "description": "Terminate on error"
            },
            "valueType": "FLAG",
            "value": true,
            "optional": false,
            "editable": false,
            "advanced": true
          },
          "connection": {
            "metadata": {
              "label": "connection",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "redis:ConnectionUri|redis:ConnectionParams",
            "value": "{\n    host: \"localhost\",\n    port: 6379\n}",
            "placeholder": "\"redis://localhost:6379\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "connectionPooling": {
            "metadata": {
              "label": "connectionPooling",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "boolean",
            "value": "false",
            "placeholder": "false",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "isClusterConnection": {
            "metadata": {
              "label": "isClusterConnection",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "boolean",
            "value": "false",
            "placeholder": "false",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "secureSocket": {
            "metadata": {
              "label": "secureSocket",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "record {|ballerina/crypto:2.6.2:TrustStore|string cert?; ballerina/crypto:2.6.2:KeyStore|ballerinax/redis:3.0.2:CertKey key?; string[] protocols?; string[] ciphers?; ballerinax/redis:3.0.2:SslVerifyMode verifyMode; boolean startTls;|}",
            "value": "{}",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "kind": "INCLUDED_FIELD"
          },
          "variable": {
            "metadata": {
              "label": "Connection Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "redisClient",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Connection Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "redis:Client",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 1
      }
    ]
  }
}
