{
  "description": "Sample flow model",
  "kind": "FUNCTION",
  "source": "proj/main.bal",
  "position": {
    "startLine": {
      "line": 1,
      "offset": 1
    },
    "endLine": {
      "line": 1,
      "offset": 1
    }
  },
  "queryMap": {
    "q": "parseString"
  },
  "categories": [
    {
      "metadata": {
        "label": "Current Integration",
        "description": "Functions defined within the current integration",
        "keywords": [
          "Project",
          "Local",
          "Function"
        ]
      },
      "items": []
    },
    {
      "metadata": {
        "label": "Agent Tools",
        "description": "Functions used as agent tools",
        "keywords": [
          "Project",
          "Local",
          "Function"
        ]
      },
      "items": []
    },
    {
      "metadata": {
        "label": "Imported Functions",
        "description": "Functions imported from other integrations",
        "keywords": [
          "Imported",
          "Function",
          "Library"
        ]
      },
      "items": [
        {
          "metadata": {
            "label": "data.jsondata",
            "description": "",
            "keywords": []
          },
          "items": [
            {
              "metadata": {
                "label": "parseString",
                "description": "Converts JSON string to subtype of anydata.\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_data.jsondata_1.1.0.png"
              },
              "codedata": {
                "node": "FUNCTION_CALL",
                "org": "ballerina",
                "module": "data.jsondata",
                "symbol": "parseString",
                "version": "1.1.0"
              },
              "enabled": true
            }
          ]
        }
      ]
    },
    {
      "metadata": {
        "label": "Available Functions",
        "description": "Functions available in the library",
        "keywords": [
          "Available",
          "Function",
          "Library"
        ]
      },
      "items": [
        {
          "metadata": {
            "label": "data.xmldata",
            "description": "",
            "keywords": []
          },
          "items": [
            {
              "metadata": {
                "label": "parseString",
                "description": "Converts XML string to record type with projection.\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_data.xmldata_1.3.1.png"
              },
              "codedata": {
                "node": "FUNCTION_CALL",
                "org": "ballerina",
                "module": "data.xmldata",
                "symbol": "parseString",
                "version": "1.3.1"
              },
              "enabled": true
            }
          ]
        },
        {
          "metadata": {
            "label": "data.yaml",
            "description": "",
            "keywords": []
          },
          "items": [
            {
              "metadata": {
                "label": "parseString",
                "description": "Converts YAML string to subtype of anydata.\n\n```ballerina\njson value = yaml:parseString(\"name: Ballerina\");\nvalue â‡’ {\"name\": \"Ballerina\"}\n```\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_data.yaml_0.8.0.png"
              },
              "codedata": {
                "node": "FUNCTION_CALL",
                "org": "ballerina",
                "module": "data.yaml",
                "symbol": "parseString",
                "version": "0.8.0"
              },
              "enabled": true
            }
          ]
        },
        {
          "metadata": {
            "label": "data.csv",
            "description": "",
            "keywords": []
          },
          "items": [
            {
              "metadata": {
                "label": "parseString",
                "description": "Parse a CSV string as a subtype of `record {}[]` or `anydata[][]`.\n\n```ballerina\nstring csvString = string `id,name\n                           1,John\n                           3,Jane`;\nrecord {int id; string name;}[] csv1 = check csv:parseString(csvString);\n[int, string][] csv2 = check csv:parseString(csvString);\nrecord {|int id;|}[] csv3 = check csv:parseString(csvString);\nrecord {int id;}[] csv4 = check csv:parseString(csvString, {skipLines: [1]});\n```\n",
                "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_data.csv_0.8.0.png"
              },
              "codedata": {
                "node": "FUNCTION_CALL",
                "org": "ballerina",
                "module": "data.csv",
                "symbol": "parseString",
                "version": "0.8.0"
              },
              "enabled": true
            }
          ]
        }
      ]
    }
  ]
}
