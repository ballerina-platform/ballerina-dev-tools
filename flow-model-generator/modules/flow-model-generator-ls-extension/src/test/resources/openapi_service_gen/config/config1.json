{
  "contractFile": "petstore.yaml",
  "textEdits": {
    "config1/service_contract_OpenApiPetstore.bal": [
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "// AUTO-GENERATED FILE.\n// This file is auto-generated by the Ballerina OpenAPI tool.\n\nimport ballerina/http;\n\n@http:ServiceConfig {basePath: \"/v1\"}\ntype OpenApiPetstore service object {\n    *http:ServiceContract;\n    resource function get pets(int? 'limit) returns Pets|ErrorDefault;\n    resource function post pets() returns http:Created|ErrorDefault;\n    resource function get pets/[string petId]() returns Dog|ErrorDefault;\n};\n\npublic type Pets Pet[];\n\npublic type ErrorDefault record {|\n    *http:DefaultStatusCodeResponse;\n    Error body;\n|};\n\npublic type Error record {\n    int code;\n    string message;\n};\n\npublic type Dog record {\n    *Pet;\n    boolean bark?;\n};\n\npublic type Pet record {\n    int id;\n    string name;\n    string tag?;\n    string 'type?;\n};\n"
      }
    ],
    "config1/main.bal": [
      {
        "range": {
          "start": {
            "line": 1,
            "character": 0
          },
          "end": {
            "line": 1,
            "character": 0
          }
        },
        "newText": "service OpenApiPetstore on l1 {\n\n\tresource function get pets (int? 'limit) returns Pets|ErrorDefault {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {body: {code: 0, message: \"\"}, status: new (0)};\n\t\t}\n\t}\n\n\tresource function post pets () returns http:Created|ErrorDefault {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {body: {code: 0, message: \"\"}, status: new (0)};\n\t\t}\n\t}\n\n\tresource function get pets/[string petId] () returns Dog|ErrorDefault {\n\t\tdo {\n\t\t} on fail error e {\n\t\t\treturn {body: {code: 0, message: \"\"}, status: new (0)};\n\t\t}\n\t}\n}\n"
      }
    ]
  },
  "listeners": [
    "l1"
  ]
}
