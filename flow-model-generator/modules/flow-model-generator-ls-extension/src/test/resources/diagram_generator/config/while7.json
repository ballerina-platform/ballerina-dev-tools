{
  "start": {
    "line": 87,
    "offset": 4
  },
  "end": {
    "line": 100,
    "offset": 5
  },
  "source": "while.bal",
  "description": "Tests a simple diagram flow",
  "diagram": {
    "fileName": "while.bal",
    "nodes": [
      {
        "id": "119820",
        "metadata": {
          "label": "Start"
        },
        "codedata": {
          "node": "EVENT_START",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 87,
              "offset": 44
            },
            "endLine": {
              "line": 100,
              "offset": 5
            }
          },
          "sourceCode": "resource function get grapes(int count) {\n        string? msg;\n        int i = 0;\n        while i < count {\n            json|error response = foodClient->get(\"/food/grapes\");\n            if (response is json) {\n                msg = \"Response received from food service: \" + response.toString();\n            } else {\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                break;\n            }\n            i += 1;\n        }\n    }"
        },
        "returning": false,
        "flags": 0
      },
      {
        "id": "119308",
        "metadata": {
          "label": "Variable",
          "description": "Assign a value to a variable"
        },
        "codedata": {
          "node": "VARIABLE",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 88,
              "offset": 8
            },
            "endLine": {
              "line": 88,
              "offset": 20
            }
          },
          "sourceCode": "string? msg;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Initialize with value"
            },
            "valueType": "EXPRESSION",
            "value": "",
            "optional": true,
            "editable": true,
            "advanced": false
          },
          "variable": {
            "metadata": {
              "label": "Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "msg",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "string|()",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 0
      },
      {
        "id": "120298",
        "metadata": {
          "label": "Variable",
          "description": "Assign a value to a variable"
        },
        "codedata": {
          "node": "VARIABLE",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 89,
              "offset": 8
            },
            "endLine": {
              "line": 89,
              "offset": 18
            }
          },
          "sourceCode": "int i = 0;"
        },
        "returning": false,
        "properties": {
          "expression": {
            "metadata": {
              "label": "Expression",
              "description": "Initialize with value"
            },
            "valueType": "EXPRESSION",
            "value": "0",
            "optional": true,
            "editable": true,
            "advanced": false
          },
          "variable": {
            "metadata": {
              "label": "Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "i",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "int",
            "placeholder": "var",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 0
      },
      {
        "id": "121560",
        "metadata": {
          "label": "While",
          "description": "Loop over a block of code."
        },
        "codedata": {
          "node": "WHILE",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 90,
              "offset": 8
            },
            "endLine": {
              "line": 99,
              "offset": 9
            }
          },
          "sourceCode": "while i < count {\n            json|error response = foodClient->get(\"/food/grapes\");\n            if (response is json) {\n                msg = \"Response received from food service: \" + response.toString();\n            } else {\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                break;\n            }\n            i += 1;\n        }"
        },
        "returning": false,
        "branches": [
          {
            "label": "Body",
            "kind": "BLOCK",
            "codedata": {
              "node": "CONDITIONAL",
              "lineRange": {
                "fileName": "while.bal",
                "startLine": {
                  "line": 90,
                  "offset": 24
                },
                "endLine": {
                  "line": 99,
                  "offset": 9
                }
              },
              "sourceCode": "{\n            json|error response = foodClient->get(\"/food/grapes\");\n            if (response is json) {\n                msg = \"Response received from food service: \" + response.toString();\n            } else {\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                break;\n            }\n            i += 1;\n        }"
            },
            "repeatable": "ONE",
            "children": [
              {
                "id": "122454",
                "metadata": {
                  "label": "get",
                  "description": "The `Client.get()` function can be used to send HTTP GET requests to HTTP endpoints.\n",
                  "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.13.0.png"
                },
                "codedata": {
                  "node": "REMOTE_ACTION_CALL",
                  "org": "ballerina",
                  "module": "http",
                  "object": "Client",
                  "symbol": "get",
                  "version": "2.13.0",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 91,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 91,
                      "offset": 66
                    }
                  },
                  "sourceCode": "json|error response = foodClient->get(\"/food/grapes\");"
                },
                "returning": false,
                "properties": {
                  "connection": {
                    "metadata": {
                      "label": "Connection",
                      "description": "Connection to use"
                    },
                    "valueType": "EXPRESSION",
                    "value": "foodClient",
                    "optional": false,
                    "editable": false,
                    "advanced": false
                  },
                  "path": {
                    "metadata": {
                      "label": "path",
                      "description": "Request path"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "string",
                    "value": "\"/food/grapes\"",
                    "placeholder": "\"\"",
                    "optional": false,
                    "editable": true,
                    "advanced": false,
                    "codedata": {
                      "kind": "REQUIRED",
                      "originalName": "path"
                    }
                  },
                  "headers": {
                    "metadata": {
                      "label": "headers",
                      "description": "The entity headers"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "map<string|string[]>|()",
                    "placeholder": "()",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "codedata": {
                      "kind": "DEFAULTABLE",
                      "originalName": "headers"
                    }
                  },
                  "targetType": {
                    "metadata": {
                      "label": "targetType",
                      "description": "HTTP response, `anydata` or stream of HTTP SSE, which is expected to be returned after data binding"
                    },
                    "valueType": "EXPRESSION",
                    "valueTypeConstraint": "json",
                    "placeholder": "json",
                    "optional": true,
                    "editable": true,
                    "advanced": true,
                    "codedata": {
                      "kind": "PARAM_FOR_TYPE_INFER",
                      "originalName": "targetType"
                    }
                  },
                  "variable": {
                    "metadata": {
                      "label": "Variable Name",
                      "description": "Name of the variable"
                    },
                    "valueType": "IDENTIFIER",
                    "value": "response",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  },
                  "type": {
                    "metadata": {
                      "label": "Variable Type",
                      "description": "Type of the variable"
                    },
                    "valueType": "TYPE",
                    "value": "json",
                    "placeholder": "var",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              },
              {
                "id": "123548",
                "metadata": {
                  "label": "If",
                  "description": "Add conditional branch to the integration flow."
                },
                "codedata": {
                  "node": "IF",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 92,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 97,
                      "offset": 13
                    }
                  },
                  "sourceCode": "if (response is json) {\n                msg = \"Response received from food service: \" + response.toString();\n            } else {\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                break;\n            }"
                },
                "returning": false,
                "branches": [
                  {
                    "label": "Then",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "CONDITIONAL",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 92,
                          "offset": 34
                        },
                        "endLine": {
                          "line": 94,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                msg = \"Response received from food service: \" + response.toString();\n            }"
                    },
                    "repeatable": "ONE_OR_MORE",
                    "properties": {
                      "condition": {
                        "metadata": {
                          "label": "Condition",
                          "description": "Boolean Condition"
                        },
                        "valueType": "EXPRESSION",
                        "value": "(response is json) ",
                        "placeholder": "true",
                        "optional": false,
                        "editable": true,
                        "advanced": false
                      }
                    },
                    "children": [
                      {
                        "id": "124580",
                        "metadata": {
                          "label": "toString",
                          "description": "Performs a direct conversion of a value to a string.\n\nThe conversion is direct in the sense that when applied to a value that is already\na string it leaves the value unchanged.\n\nThe details of the conversion are specified by the ToString abstract operation\ndefined in the Ballerina Language Specification, using the direct style.\n\n```ballerina\ndecimal value = 12.12d;\nvalue.toString() ⇒ 12.12\nanydata[] data = [1, \"Sam\", 12.3f, 12.12d, {value: 12}];\ndata.toString() ⇒ [1,\"Sam\",12.3,12.12,{\"value\":12}]\n```\n",
                          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_lang.value_0.0.0.png"
                        },
                        "codedata": {
                          "node": "METHOD_CALL",
                          "org": "ballerina",
                          "module": "lang.value",
                          "symbol": "toString",
                          "version": "0.0.0",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 93,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 93,
                              "offset": 84
                            }
                          },
                          "sourceCode": "msg = \"Response received from food service: \" + response.toString();"
                        },
                        "returning": false,
                        "properties": {
                          "connection": {
                            "metadata": {
                              "label": "Connection",
                              "description": "Connection to use"
                            },
                            "valueType": "EXPRESSION",
                            "value": "response",
                            "optional": false,
                            "editable": false,
                            "advanced": false
                          }
                        },
                        "flags": 0
                      }
                    ]
                  },
                  {
                    "label": "Else",
                    "kind": "BLOCK",
                    "codedata": {
                      "node": "ELSE",
                      "lineRange": {
                        "fileName": "while.bal",
                        "startLine": {
                          "line": 94,
                          "offset": 19
                        },
                        "endLine": {
                          "line": 97,
                          "offset": 13
                        }
                      },
                      "sourceCode": "{\n                msg = \"Error occurred while invoking food service: \" + response.message();\n                break;\n            }"
                    },
                    "repeatable": "ZERO_OR_ONE",
                    "children": [
                      {
                        "id": "126570",
                        "metadata": {
                          "label": "message",
                          "description": "Returns the error's message.\n\n```ballerina\nerror(\"IO error\").message() ⇒ IO error\n```\n",
                          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_lang.error_0.0.0.png"
                        },
                        "codedata": {
                          "node": "METHOD_CALL",
                          "org": "ballerina",
                          "module": "lang.error",
                          "symbol": "message",
                          "version": "0.0.0",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 95,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 95,
                              "offset": 90
                            }
                          },
                          "sourceCode": "msg = \"Error occurred while invoking food service: \" + response.message();"
                        },
                        "returning": false,
                        "properties": {
                          "connection": {
                            "metadata": {
                              "label": "Connection",
                              "description": "Connection to use"
                            },
                            "valueType": "EXPRESSION",
                            "value": "response",
                            "optional": false,
                            "editable": false,
                            "advanced": false
                          },
                          "e": {
                            "metadata": {
                              "label": "e",
                              "description": "the error value"
                            },
                            "valueType": "EXPRESSION",
                            "valueTypeConstraint": "error",
                            "placeholder": "error(\"\")",
                            "optional": false,
                            "editable": true,
                            "advanced": false,
                            "codedata": {
                              "kind": "REQUIRED",
                              "originalName": "e"
                            }
                          }
                        },
                        "flags": 0
                      },
                      {
                        "id": "127494",
                        "metadata": {
                          "label": "Break",
                          "description": "Exit the current loop"
                        },
                        "codedata": {
                          "node": "BREAK",
                          "lineRange": {
                            "fileName": "while.bal",
                            "startLine": {
                              "line": 96,
                              "offset": 16
                            },
                            "endLine": {
                              "line": 96,
                              "offset": 22
                            }
                          },
                          "sourceCode": "break;"
                        },
                        "returning": false,
                        "flags": 0
                      }
                    ]
                  }
                ],
                "flags": 0
              },
              {
                "id": "129351",
                "metadata": {
                  "label": "Custom Expression",
                  "description": "Represents a custom Ballerina expression"
                },
                "codedata": {
                  "node": "EXPRESSION",
                  "lineRange": {
                    "fileName": "while.bal",
                    "startLine": {
                      "line": 98,
                      "offset": 12
                    },
                    "endLine": {
                      "line": 98,
                      "offset": 19
                    }
                  },
                  "sourceCode": "i += 1;"
                },
                "returning": false,
                "properties": {
                  "statement": {
                    "metadata": {
                      "label": "Statement",
                      "description": "Ballerina statement"
                    },
                    "valueType": "EXPRESSION",
                    "value": "i += 1;",
                    "optional": false,
                    "editable": true,
                    "advanced": false
                  }
                },
                "flags": 0
              }
            ]
          }
        ],
        "properties": {
          "condition": {
            "metadata": {
              "label": "Condition",
              "description": "Boolean Condition"
            },
            "valueType": "EXPRESSION",
            "value": "i < count ",
            "placeholder": "true",
            "optional": false,
            "editable": true,
            "advanced": false
          }
        },
        "flags": 0
      }
    ],
    "connections": [
      {
        "id": "33789",
        "metadata": {
          "label": "New Connection",
          "description": "The HTTP client provides the capability for initiating contact with a remote HTTP service. The API it\nprovides includes the functions for the standard HTTP methods forwarding a received request and sending requests\nusing custom HTTP verbs.",
          "icon": "https://bcentral-packageicons.azureedge.net/images/ballerina_http_2.13.0.png"
        },
        "codedata": {
          "node": "NEW_CONNECTION",
          "org": "ballerina",
          "module": "http",
          "object": "Client",
          "symbol": "init",
          "version": "2.13.0",
          "lineRange": {
            "fileName": "while.bal",
            "startLine": {
              "line": 2,
              "offset": 0
            },
            "endLine": {
              "line": 2,
              "offset": 61
            }
          },
          "sourceCode": "http:Client foodClient = check new (\"http://localhost:9090\");"
        },
        "returning": false,
        "properties": {
          "scope": {
            "metadata": {
              "label": "Connection Scope",
              "description": "Scope of the connection, Global or Local"
            },
            "valueType": "ENUM",
            "value": "Global",
            "optional": false,
            "editable": true,
            "advanced": true
          },
          "checkError": {
            "metadata": {
              "label": "Check Error",
              "description": "Terminate on error"
            },
            "valueType": "FLAG",
            "value": true,
            "optional": false,
            "editable": false,
            "advanced": true
          },
          "url": {
            "metadata": {
              "label": "url",
              "description": "URL of the target service"
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "value": "\"http://localhost:9090\"",
            "placeholder": "\"\"",
            "optional": false,
            "editable": true,
            "advanced": false,
            "codedata": {
              "kind": "REQUIRED",
              "originalName": "url"
            }
          },
          "httpVersion": {
            "metadata": {
              "label": "httpVersion",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:HttpVersion",
            "placeholder": "\"2.0\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "httpVersion"
            }
          },
          "http1Settings": {
            "metadata": {
              "label": "http1Settings",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ClientHttp1Settings",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "http1Settings"
            }
          },
          "http2Settings": {
            "metadata": {
              "label": "http2Settings",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ClientHttp2Settings",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "http2Settings"
            }
          },
          "timeout": {
            "metadata": {
              "label": "timeout",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "decimal",
            "placeholder": "0.0d",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "timeout"
            }
          },
          "forwarded": {
            "metadata": {
              "label": "forwarded",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "string",
            "placeholder": "\"\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "forwarded"
            }
          },
          "followRedirects": {
            "metadata": {
              "label": "followRedirects",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:FollowRedirects|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "followRedirects"
            }
          },
          "poolConfig": {
            "metadata": {
              "label": "poolConfig",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:PoolConfiguration|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "poolConfig"
            }
          },
          "cache": {
            "metadata": {
              "label": "cache",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:CacheConfig",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "cache"
            }
          },
          "compression": {
            "metadata": {
              "label": "compression",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:Compression",
            "placeholder": "\"AUTO\"",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "compression"
            }
          },
          "auth": {
            "metadata": {
              "label": "auth",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:CredentialsConfig|http:BearerTokenConfig|http:JwtIssuerConfig|http:OAuth2ClientCredentialsGrantConfig|http:OAuth2PasswordGrantConfig|http:OAuth2RefreshTokenGrantConfig|http:OAuth2JwtBearerGrantConfig|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "auth"
            }
          },
          "circuitBreaker": {
            "metadata": {
              "label": "circuitBreaker",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:CircuitBreakerConfig|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "circuitBreaker"
            }
          },
          "retryConfig": {
            "metadata": {
              "label": "retryConfig",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:RetryConfig|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "retryConfig"
            }
          },
          "cookieConfig": {
            "metadata": {
              "label": "cookieConfig",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:CookieConfig|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "cookieConfig"
            }
          },
          "responseLimits": {
            "metadata": {
              "label": "responseLimits",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ResponseLimitConfigs",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "responseLimits"
            }
          },
          "proxy": {
            "metadata": {
              "label": "proxy",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ProxyConfig|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "proxy"
            }
          },
          "validation": {
            "metadata": {
              "label": "validation",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "boolean",
            "placeholder": "false",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "validation"
            }
          },
          "socketConfig": {
            "metadata": {
              "label": "socketConfig",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ClientSocketConfig",
            "placeholder": "{}",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "socketConfig"
            }
          },
          "secureSocket": {
            "metadata": {
              "label": "secureSocket",
              "description": ""
            },
            "valueType": "EXPRESSION",
            "valueTypeConstraint": "http:ClientSecureSocket|()",
            "placeholder": "()",
            "optional": true,
            "editable": true,
            "advanced": true,
            "codedata": {
              "kind": "INCLUDED_FIELD",
              "originalName": "secureSocket"
            }
          },
          "variable": {
            "metadata": {
              "label": "Connection Name",
              "description": "Name of the variable"
            },
            "valueType": "IDENTIFIER",
            "value": "foodClient",
            "optional": false,
            "editable": true,
            "advanced": false
          },
          "type": {
            "metadata": {
              "label": "Connection Type",
              "description": "Type of the variable"
            },
            "valueType": "TYPE",
            "value": "http:Client",
            "placeholder": "var",
            "optional": false,
            "editable": false,
            "advanced": false
          }
        },
        "flags": 1
      }
    ]
  }
}
