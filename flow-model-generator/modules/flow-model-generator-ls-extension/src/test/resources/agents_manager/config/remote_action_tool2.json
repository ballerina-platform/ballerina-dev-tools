{
  "source": "agent_1/agents.bal",
  "name": "toolFunc",
  "connection": "redisClientx",
  "description": "Sample diagram node",
  "toolDescription": "The Client connection for redis",
  "diagram": {
    "id": "31",
    "metadata": {
      "label": "bitOpAnd",
      "description": "Perform bitwise AND between strings.\n",
      "icon": "https://bcentral-packageicons.azureedge.net/images/ballerinax_redis_3.0.2.png"
    },
    "codedata": {
      "node": "REMOTE_ACTION_CALL",
      "org": "ballerinax",
      "module": "redis",
      "object": "Client",
      "symbol": "bitOpAnd",
      "version": "3.0.2",
      "id": 1109,
      "isNew": true
    },
    "returning": false,
    "properties": {
      "connection": {
        "metadata": {
          "label": "Connection",
          "description": "Connection to use"
        },
        "valueType": "IDENTIFIER",
        "valueTypeConstraint": "redis:Client",
        "value": "redisClient",
        "optional": true,
        "editable": false,
        "advanced": false
      },
      "destination": {
        "metadata": {
          "label": "destination",
          "description": "Result key of the operation"
        },
        "valueType": "EXPRESSION",
        "valueTypeConstraint": "string",
        "placeholder": "destination",
        "optional": false,
        "editable": true,
        "advanced": false,
        "codedata": {
          "kind": "REQUIRED",
          "originalName": "destination"
        },
        "typeMembers": [
          {
            "type": "string",
            "packageInfo": "",
            "kind": "BASIC_TYPE",
            "selected": false
          }
        ]
      },
      "keys": {
        "metadata": {
          "label": "keys",
          "description": "Input keys to perform AND between"
        },
        "valueType": "EXPRESSION",
        "valueTypeConstraint": "string[]",
        "placeholder": "keys",
        "optional": false,
        "editable": true,
        "advanced": false,
        "codedata": {
          "kind": "REQUIRED",
          "originalName": "keys"
        },
        "typeMembers": [
          {
            "type": "string",
            "packageInfo": "",
            "kind": "ARRAY_TYPE",
            "selected": false
          }
        ]
      },
      "type": {
        "metadata": {
          "label": "Variable Type",
          "description": "Type of the variable"
        },
        "valueType": "TYPE",
        "value": "int",
        "placeholder": "var",
        "optional": false,
        "editable": false,
        "advanced": false
      },
      "variable": {
        "metadata": {
          "label": "Variable Name",
          "description": "Name of the variable"
        },
        "valueType": "IDENTIFIER",
        "value": "intResult",
        "optional": false,
        "editable": true,
        "advanced": false
      },
      "checkError": {
        "metadata": {
          "label": "Check Error",
          "description": "Trigger error flow"
        },
        "valueType": "FLAG",
        "value": true,
        "optional": false,
        "editable": true,
        "advanced": true
      }
    },
    "flags": 0
  },
  "output": {
    "agent_1/agents.bal": [
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "import ballerinax/redis;"
      },
      {
        "range": {
          "start": {
            "line": 0,
            "character": 0
          },
          "end": {
            "line": 0,
            "character": 0
          }
        },
        "newText": "# The Client connection for redis\n# + destination - Result key of the operation\n# + keys - Input keys to perform AND between\n# + return - Type of the variable\n@ai:AgentTool\n@display {label: \"\",iconPath: \"https://bcentral-packageicons.azureedge.net/images/ballerinax_redis_3.0.2.png\"}\nisolated function toolFunc( string destination, string[] keys) returns int| error { int intResult = check redisClientx-> bitOpAnd( destination, keys) ;\nreturn intResult;\n}"
      }
    ]
  }
}
