/*
 *  Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com)
 *
 *  WSO2 LLC. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

apply from: "$rootDir/gradle/javaProject.gradle"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "java"

description = 'Index generator for the flow model extension'

configurations.configureEach {
    resolutionStrategy.preferProjectModules()
}

configurations {
    dist {
        transitive true
    }
}

dependencies {
    implementation project(':flow-model-generator:flow-model-central-client')
    implementation(project(':flow-model-generator:flow-model-generator-core')) {
        exclude group: 'io.ballerina.flowmodelgenerator.core', module: 'flow-model-generator-core'
    }

    implementation "org.ballerinalang:ballerina-lang:${ballerinaLangVersion}"
    implementation "org.ballerinalang:ballerina-parser:${ballerinaLangVersion}"
    implementation "org.ballerinalang:ballerina-tools-api:${ballerinaLangVersion}"
    implementation "org.ballerinalang:diagram-util:${ballerinaLangVersion}"
    implementation "org.ballerinalang:toml-parser:${ballerinaLangVersion}"
    implementation "org.ballerinalang:language-server-core:${ballerinaLangVersion}"
    implementation "org.xerial:sqlite-jdbc:${sqliteJdbcVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
}

tasks.register('runIndexGenerator', JavaExec) {
    mainClass = 'io.ballerina.indexgenerator.IndexGenerator'
    classpath = sourceSets.main.runtimeClasspath
    args = [] // Add any arguments if needed
    systemProperties = [
            "ballerina.home": balDistribution
    ]
}

ext.moduleName = 'io.ballerina.indexgenerator'

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
